/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_invoice_supplier.py:@step('TS/AIS Post the invoice with description "{uDescription}" and assert the taxes named "{uTaxName}" are right')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_invoice_supplier.py:@step('TS/AIS Create a credit note for the invoice with description "{uDescription}" and assert the amounts')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@given('we have proteus installed')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@step('Ensure that the "{mod}" module is loaded')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@step('the "{mod}" module is in the list of loaded modules')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@step('we print the list of loaded modules')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@step('Ensure that the WebDAV modules are loaded')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@step('we have the following table of "{mod}" instances')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/basic_modules.py:@then('there are some instances of "{uMod}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/behave_test.py:@given('we have behave installed')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/behave_test.py:@when('we implement a test')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/behave_test.py:@then('behave will test it for us!')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@step('having')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@step(u'I find a "{model_name}" with {domain}')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@step(u'I need a "{model_name}" with {domain}')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@given('I set global property named "{pname}" for model "{modelname}" and field "{fieldname}" for company with ref "{company_oid}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@given('I set global property named "{pname}" for model "{modelname}" and field "{fieldname}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@step('the property is related to model "{modelname}" using column "{column}" and value "{value}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@given('I am configuring the company with ref "{company_oid}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/dsl.py:@step('I delete it')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/ir.py:@step('ir/attachment test')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/ir.py:@step('Attach to an instance named "{uName}" of class "{uClass}" the content of this feature file')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/ir.py:@step('Attach to an instance named "{uName}" of class "{uClass}" a link to an existing file with the following |filename| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/ir.py:@step('Attach to an instance with field "{uField}" "{uValue}" of class "{uClass}" a link to an existing file with the following |filename| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/ir.py:@step('Attach to an instance with field "{uField}" "{uValue}" of class "{uClass}" the content of an existing file with the following |filename| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/oerpscenario.py:@step('I do not want all demo data to be loaded on install')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/oerpscenario.py:@step('I update the module list')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/oerpscenario.py:@step('I install the required modules with dependencies')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/oerpscenario.py:@step('my modules should have been installed and models reloaded')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_class_cache')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_class_method')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_find')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_many2one')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_one2many')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_many2many')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_reference')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_id_counter')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_init')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_save')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_save_many2one')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_save_one2many')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_save_many2many')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_cmp')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_default_set')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_delete')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_on_change')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_on_change_with')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/proteus_doctests.py:@step('proteus/test_model test_on_change_set')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_reconciliation.py:@step('T/A/SAR Create Moves for direct reconciliation')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_reconciliation.py:@step('T/A/SAR Reconcile Lines without writeoff')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_reconciliation.py:@step('T/A/SAR Create Moves for writeoff reconciliation')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_reconciliation.py:@step('T/A/SAR Reconcile Lines with writeoff')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Create products of type "{uType}" from the ProductTemplate named "{uName}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Purchase products on the P. O. with description "{uDescription}" from supplier "{uSupplier}" with quantities')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Quote and Confirm a P. O. with description "{uDescription}" from Supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Receive 9 products from the P. O. with description "{uDescription}" from Supplier "{uSupplier}" with quantities')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS After receiving 9 products assert the account credits and debits')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Open a purchase invoice to pay for what we received from the P. O. with description "{uDescription}" to supplier "{uSupplier}" with prices')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS After paying for what we received assert the account credits and debits')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS After shipping to customer assert the account credits and debits')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS After posting the invoice to customer assert the account credits and debits')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Create an invoice to supplier "{uSupplier}" with PaymentTerm "{uPaymentTerm}" by an accountant with quantities')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon.py:@step('T/ASAS/SASAS Create an invoice to supplier "{uSupplier}" with PaymentTerm "{uPaymentTerm}" by an accountant with negative quantities')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon_with_drop_shipment.py:@step('Create a ProductSupplier with description "{uDescription}" from a ProductTemplate named "{uTemplateName}" with supplier named "{uSupplier}" with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_account_stock_anglo_saxon_with_drop_shipment.py:@step('T/ASASDS Account Stock Anglo-Saxon with Drop Shipment Scenario')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create database')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Set the default feature data')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Set the feature data with values')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create database with pool.test set to True')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Install the test module named "{uName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create the company with default COMPANY_NAME and Currency code "{uCode}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create the Company associated with the party named "{uParty}" and using the currency "{uCode}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create the currency with Currency code "{uCode}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Reload the default User preferences into the context')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a saved instance of "{uKlass}" named "{uName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create an instance of "{uKlass}" named "{uName}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create an instance of "{uKlass}" named "{uName}" with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Set the slots of the instance named "{uName}" of model "{uKlass}" to the values')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Set the instance named "{uName}" of model "{uKlass}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create parties')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a party named "{uName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a party named "{uName}" with Payable and Receivable')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a party named "{uName}" with an account_payable attribute')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a party named "{uName}" with payable and receivable properties')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a party named "{uName}" with payable and receivable properties with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a party named "{uName}" with payable and receivable properties with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a user named "{uName}" with the fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a user named "{uName}" with the |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a grouped user named "{uName}" with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a sale user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a purchase user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a stock user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a account user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create an account user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a product user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_doctests.py:@step('Create a stock_admin user')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_purchase.py:@step('T/PUR Assert the Purchase lines in the P. O. with description "{uDescription}" for products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_purchase.py:@step('T/PUR Assert the Invoice lines are linked to stock move in the P. O. with description "{uDescription}" for products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_purchase.py:@step('T/PUR Check no new invoices in the P. O. with description "{uDescription}" for products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_purchase.py:@step('T/PUR Assert not yet linked to invoice lines P. O. with description "{uDescription}" for products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_purchase.py:@step('T/PUR Purchase Scenario')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_stock_average_cost_price.py:@step('T/SACP Check Cost Price is 100')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_stock_average_cost_price.py:@step('T/SACP Check Cost Price is 150')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_stock_average_cost_price.py:@step('T/SACP Stock Average Cost Price Scenario')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/scenario_stock_internal_supply.py:@step('T/SSOS Stock Shipment Out Scenario')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create this fiscal year')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create this fiscal year without Invoicing')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create the fiscal year "{uYear}" without Invoicing')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create this fiscal year with Invoicing')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create the fiscal year "{uYear}" with Invoicing')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create this fiscal year with a non-strict post_move_seq')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create the fiscal year "{uYear}" with a non-Strict post_move_seq')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create a default Minimal Account Chart')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create a chart of accounts from template "{uTem}" with root "{uRoot}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Set the default credit and debit accounts on the cash Journal')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create a PaymentTerm named "{uTermName}" with "{uNum}" days remainder')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account.py:@step('Create a tax named "{uTaxName}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account_invoice.py:@step('Create an invoice on date "{uDate}" with description "{uDescription}" and a PaymentTerm named "{uPaymentTerm}" to supplier "{uSupplier}" with following |description|quantity|unit_price|account|currency| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account_invoice.py:@step('Create an invoice on date "{uDate}" with description "{uDescription}" and a PaymentTerm named "{uPaymentTerm}" to customer "{uCustomer}" with following |description|quantity|unit_price|account|currency| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_account_invoice.py:@step('Action "{uAct}" on date "{uDate}" the Invoice with description "{uDescription}" as user named "{uUser}" products from party "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_bank.py:@step('Create a bank associated to a party "{uParty}" with optional |bic| field')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_bank.py:@step('Create a bank account with IBAN "{uIban}" at a bank associated to a party "{uParty}", with following optional number, owner or currency')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_bank.py:@step('Create a sequence on account.journal named "{uBankSequenceName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_bank.py:@step('Create a Bank Statement Journal named "{uName}" from the account.journal named "{uStatementAJName}" with currency "{uCur}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_bank.py:@step('Create a cash account.journal named "{uName}" from the sequence named "{uBankSequenceName}" with following |name|value| credit_account, debit_account fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_bank.py:@step('Create a financial account under "{uTemplate}" for the bank account with IBAN "{uIban}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_calendar.py:@step('Create a calendar named "{uCalName}" owned by the user "{uUserName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_calendar.py:@step('I need a set of "{uKind}" events in a calendar named "{uCalName}" owned by the user named "{uUserName}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_calendar.py:@step('I need a set of "{uKind}" annual events in the calendar named "{uCalName}" owned by the user named "{uUserName}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_product.py:@step('Create a ProductCategory named "{uName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_product.py:@step('Create a ProductTemplate named "{uName}" with stock accounts from features from a ProductCategory named "{uCatName}" with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_product.py:@step('Create a ProductTemplate named "{uTemplateName}" with supplier_tax named "{uTaxName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_product.py:@step('Create a ProductTemplate named "{uTemplateName}" with supplier_tax named "{uTaxName}" with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_product.py:@step('Create a product with description "{uDescription}" from template "{uTemplateName}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_purchase.py:@step('Create a Purchase Order with description "{uDescription}" from supplier "{uSupplier}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_purchase.py:@step('Purchase on date "{uDate}" with description "{uDescription}" as user named "{uUser}" ProductTemplates from supplier "{uSupplier}" with PaymentTerm "{uTerm}" and InvoiceMethod "{uMethod}" with |name|quantity|description| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_purchase.py:@step('Purchase on date "{uDate}" with description "{uDescription}" as user named "{uUser}" Products from supplier "{uSupplier}" with PaymentTerm "{uTerm}" and InvoiceMethod "{uMethod}" with |description|quantity|line_description| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_purchase.py:@step('Purchase "{uAct}" on date "{uDate}" the P. O. with description "{uDescription}" as user named "{uUser}" products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_purchase.py:@step('Invoice "{uAct}" on date "{uDate}" the P. O. with description "{uDescription}" as user named "{uUser}" products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_purchase.py:@step('Validate shipments for P. O. with description "{uDescription}" as user named "{uUser}" for products from supplier "{uSupplier}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Sale on date "{uDate}" with description "{uDescription}" as user named "{uUser}" products to customer "{uCustomer}" with PaymentTerm "{uTerm}" and InvoiceMethod "{uMethod}" with |product|quantity|description| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Sale "{uAct}" on date "{uDate}" the S. O. with description "{uDescription}" as user named "{uUser}" products from customer "{uCustomer}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Invoice "{uAct}" on date "{uDate}" the S. O. with description "{uDescription}" as user named "{uUser}" products from customer "{uCustomer}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Create a sales order with description "{uDescription}" to customer "{uCustomer}" with fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Sell Products on the S. O. with description "{uDescription}" to customer "{uCustomer}" with |description|quantity| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Ship the products on the S. O. with description "{uDescription}" to customer "{uCustomer}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_sale.py:@step('Post customer Invoice for the S. O. with description "{uDescription}" to customer "{uCustomer}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_stock.py:@step('Create a stock admin user named "{uName}" with login "{uLogin}" in group "{uGroup}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_stock.py:@step('Create a new stock.location named "{uName}" of type "{uType}" of parent with code "{uParent}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_stock.py:@step('Add to inventory as user named "{uUser}" with storage at the location coded "{uCode}" ProductTemplates with |product|quantity|expected_quantity| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_stock.py:@step('Create an Inventory as user named "{uUser}" with storage at the location coded "{uCode}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytond_stock.py:@step('Stock Move of product of ProductTemplate "{uProductTemplate}" between locations with |name|value| fields')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytonspain_bank_statement.py:@step('TSp/BS Create chart of accounts')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytonspain_bank_statement.py:@step('TSp/BS Create Bank Statement that uses a StatementJournal named "{uSJournal}" at date "{uDate}"')
/n/data/TrytonOpenERP/3.2/trytond_scenari/features/steps/trytonspain_bank_statement.py:@step('TSp/BS Create Bank Move on Fiscal Year "{uFYear}" and nth period "{uPeriod}" on AccountJournal named "{uStatementAJ}"')
