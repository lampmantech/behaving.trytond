# -*- mode: text; fill-column: 75; coding: utf-8-unix; encoding: utf-8 -*-

From: ../features/steps/scenario_account_stock_anglo_saxon_with_drop_shipment.py


   =====================================================
   Account Stock Anglo-Saxon with Drop Shipment Scenario
   =====================================================
   Unfinished

**Create a ProductSupplier with description "{uDescription}" from a ProductTemplate named "{uTemplateName}" with supplier named "{uSupplier}" with |name|value| fields**
   ProductSupplier = proteus.Model.get('purchase.product_supplier')
   Party = proteus.Model.get('party.party')
   supplier, = Party.find([('name', '=', uSupplier),])
   ProductTemplate = proteus.Model.get('product.template')
   template, = ProductTemplate.find([('name', '=', uTemplateName)])
   if not ProductSupplier.find([('product.name', '=', uTemplateName),
   ('party.id', '=', supplier.id)]):
   product_supplier = ProductSupplier()
   product_supplier.product = template
   product_supplier.party = supplier
   for row in context.table:
   setattr(template, row['name'],
   string_to_python(row['name'], row['value'],
   ProductSupplier))
   product_supplier.save()
   product_supplier, = ProductSupplier.find([('product.name', '=', uTemplateName),
   ('party.id', '=', supplier.id)])
   def product_supplier():
   if True:
   product_supplier, = ProductSupplier.find([('product.name', '=', uName),
   ('party.id', '=', supplier.id)])
   else:
   product_supplier = ProductSupplier()
   product_supplier.product = template
   product_supplier.party = supplier
   product_supplier.drop_shipment = True
   product_supplier.delivery_time = 0
   product_supplier.save()

**T/ASASDS Account Stock Anglo-Saxon with Drop Shipment Scenario**
