
== trytond_product.py ==


**STEP: Create a ProductCategory named "{uName}"**

Given \
Create a saved instance of "product.category" named "{uName}"
Idempotent.

**STEP: Create a ProductTemplate named "{uName}" with stock accounts from features from a ProductCategory named "{uCatName}" with |name|value| fields**

Given \
Create a ProductTemplate named "{uName}"
from a ProductCategory named "{uCatName}" with |name|value| fields
| name              | value |
| type	      | goods |
| cost_price_method | fifo  |
| purchasable       | True  |
| salable 	      | True  |
| list_price 	      | 10    |
| cost_price 	      | 5     |
| delivery_time     | 0     |
| default_uom	      | Unit  |
| account_expense   | Main Expense |
| account_revenue   | Main Revenue |
| account_cogs      | COGS  |
| stock_journal     | STO   |
This requires that anglo_saxon
Idempotent.

**STEP: Create a ProductTemplate named "{uTemplateName}" with supplier_tax named "{uTaxName}"**

Given \
Create a ProductTemplate named "{uTemplateName}"
with a supplier_tax named "{uTaxName}"

**STEP: Create a ProductTemplate named "{uTemplateName}" with supplier_tax named "{uTaxName}" with |name|value| fields**

Given \
Create a ProductTemplate named "{uTemplateName}"
with supplier_tax named "{uTaxName}"
with |name|value| fields
such as:
type, cost_price_method, default_uom, list_price, cost_price.
The fields account_expense, account_revenue become the related accounts.
E. g.
| name              | value   |
| type	      | service |
| list_price 	      | 40      |
| cost_price 	      | 20      |
| default_uom	      | Unit    |
| account_expense   | Main Expense |
| account_revenue   | Main Revenue |
We'll put a hack to work on systems without a CoTs:
just call the tax "NO Sales Tax".
Idempotent.

**STEP: Create a product with description "{uDescription}" from template "{uTemplateName}"**

Given \
Create a product with description "{uDescription}" from template "{uTemplateName}"
Idempotent.

This file is automatically generated from the source code: do not edit.
